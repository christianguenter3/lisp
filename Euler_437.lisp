(defun calculate-mod(base modulo) 
  (mapcar (lambda(x)
     		 (mod (expt base x) modulo))
          (loop for i from 0 to 9
    	  		collect i )))

(defun is-primitive-root(list)
  (let ((ispr T))
  	(mapcar (lambda(x)
              (unless (member x list)
                (setf ispr nil)))
            (loop for i from 1 to 10
              		    collect i))
   ispr))

(defun gen-fib-seq-rec (start a b modulo)
  (let* ((new (+ a b))
          (_new (if (> new 9)
	      		    (mod new modulo)
	     		    new)))    
   	 (if (= _new start)
         nil
         (cons _new (gen-fib-seq-rec start b _new modulo)))))

(defun gen-fib-seq (a b modulo)
  ; (print "=================")
  ; (print a)
  ; (print b)
  ; (print modulo)
  (cons a (cons b (gen-fib-seq-rec a a b modulo))))

(defun is-fib-prim-root(base modulo)
  (let ((mod (calculate-mod base modulo)))
    (equal mod (gen-fib-seq (car mod) (cadr mod) modulo))))

; (print (is-fib-prim-root 8 11))
; (print (is-fib-prim-root 11 11))
; (print (gen-fib-seq 1 8 11))
; (print (calculate-mod 8 11))
; (print (is-primitive-root(calculate-mod 8 11)))
; (print (equal (calculate-mod 8 11)(gen-fib-seq 1 8 11)))

(defun find-prim-root(n)
  (mapcar (lambda (x)
            (is-fib-prim-root x n))
          (loop for i from 1 to n
        		collect i)))

(print (find T (find-prim-root 2)))
(print (find T (find-prim-root 3)))
;(print (find T (find-prim-root 7)))
(print (find T (find-prim-root 5)))
(print (find T (find-prim-root 11)))
(print (find T (find-prim-root 13)))
(print (find T (find-prim-root 17)))
(print (find T (find-prim-root 19)))
(print (find T (find-prim-root 23)))
(print (find T (find-prim-root 27)))
(print (find T (find-prim-root 29)))
(print (find T (find-prim-root 31)))
(print (find T (find-prim-root 37)))
(print (find T (find-prim-root 41)))
(print (find T (find-prim-root 43)))
(print (find T (find-prim-root 47)))
(print (find T (find-prim-root 53)))
(print (find T (find-prim-root 57)))
(print (find T (find-prim-root 61)))
(print (find T (find-prim-root 67)))
(print (find T (find-prim-root 97)))