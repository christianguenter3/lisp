(defvar *sum*)
(defvar *upper-limit*)
(defvar *a*)
(defvar *b*)

(defun next_fib()
  (let ((n_fib (+ *a* *b*)))  
    (cond ((< n_fib *upper-limit*)
           (setf *a* *b*)
    	   (setf *b* n_fib)
           (unless (oddp n_fib)                   
	           	   (setf *sum* (+ n_fib *sum*)))
           (next_fib)))))

(setf *a* 1)
(setf *b* 2)
(setf *sum* 2)
(setf *upper-limit* 4000000)
(next_fib)
(print *sum*)